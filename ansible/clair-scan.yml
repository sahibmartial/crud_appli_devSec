- name: Clair Scanner Server Setup
  hosts: build
  become: true
  vars:
    image_to_scan_app: "{{image_frotend_scan}}"  #container to scan for vulnerabilities
    image_to_scan_back: "{{image_mysql_scan}}"  #container to scan for vulnerabilities
    image_tag_app: "{{crud_image_tag_app}}"
    image_tag_mysql: "{{crud_image_tag_mysql}}"
    clair_server: "172.17.0.1"  #clair server api endpoint
  vars_files:
   - "files/secrets/devops.yml"
  pre_tasks:
    - name: setting up clair-db
      docker_container:
        name: clair_db
        image: arminc/clair-db:2020-04-18
        exposed_ports:
          - 5432

    - name: setting up clair-local-scan
      docker_container:
        name: clair
        image: arminc/clair-local-scan:v2.0.6
        ports:
          - "6060:6060"
        links:
          - "clair_db:postgres"

    - debug:
        msg: "It will take some time to update the CVE databasae"
  tasks:
    - name: downloading and setting up clair-scanner binary
      get_url:
        url: https://github.com/arminc/clair-scanner/releases/download/v6/clair-scanner_linux_amd64
        dest: /usr/local/bin/clair-scanner
        mode: 0755

    - name: scanning {{image_to_scan_app}} container for vulnerabilities
      shell: "/usr/local/bin/clair-scanner -r /tmp/cd_frontend-scan-report.json -c http://{{ clair_server }}:6060 --ip {{clair_server}} {{image_to_scan_app}}:{{image_tag_app}} "
      register: scan_output
      ignore_errors: yes

    - name: scanning {{image_to_scan_back}} container for vulnerabilities
      shell: "/usr/local/bin/clair-scanner -r /tmp/cd_backend-scan-report.json -c http://{{ clair_server }}:6060 --ip {{clair_server}} {{image_to_scan_back}}:{{image_tag_mysql}}"
      register: scan_output
      ignore_errors: yes

    - name: Build api image and push it to Registry
      docker_image:
        path: "{{ home }}/application-crud/"
        name: "{{ dns_addr_server_gitlab }}/{{ gitlab_container_registry_username }}/{{ gitlab_docker_repo }}/{{ image_name_frontend }}"
        push: yes
        tag: "{{ crud_image_tag_app }}"
      tags:
        - push

    - name: Push it to Registry
      docker_image:
        path: "{{ home }}/application-crud/"
        name: "{{ dns_addr_server_gitlab }}/{{ gitlab_container_registry_username }}/{{ gitlab_docker_repo }}/{{ image_name_database }}"
        push: yes
        tag: "{{ crud_image_tag_mysql }}"
      tags:
        - push


    - name: Remove image on build host
      docker_image:
        state: absent
        name: "{{ dns_addr_server_gitlab }}/{{ gitlab_container_registry_username }}/{{ gitlab_docker_repo }}/{{ image_name_frontend }}"
        tag: "{{ crud_image_tag_app }}"
      tags:
        - build

    - name: Remove image on build host
      docker_image:
        state: absent
        name: "{{ dns_addr_server_gitlab }}/{{ gitlab_container_registry_username }}/{{ gitlab_docker_repo }}/{{ image_name_database }}"
        tag: "{{ crud_image_tag_mysql }}"
      tags:
        - build

#    - name: exit if some CVE is found
#      fail:
#        msg: "the command failed"
#      when: "'CVE-2018-' in scan_output.stderr"
